// Using old gradle because ForgeGradle needs maven for snapshots,
// and because ForgeGradle doesn't like sourceSets outside of api, main, and test

buildscript {
	repositories {
		jcenter()
		maven {
			name "forge"
			url "http://files.minecraftforge.net/maven"
		}
	}
}

// ~~~ Start: Gradle plugin application
plugins {
	id 'java'
	id 'scala'
	id "temportalist.automata" version "0.0.1.54"
}
// ~~~~~ End: Gradle plugin application

// ~~~ Start: Java Compatibility
sourceCompatibility = org.gradle.api.JavaVersion.VERSION_1_7
targetCompatibility = org.gradle.api.JavaVersion.VERSION_1_7
// ~~~~~ End: Java Compatibility

// ~~~ Start: SourceSets
apply from: "gradle_scripts/jar/sourceSets.gradle"
apply from: "gradle_scripts/jar/jar.gradle"
apply from: "gradle_scripts/jar/sources.gradle"
// ~~~~~ End: SourceSets

// ~~~ Start: Automata

ext {
	gitName = "EsoTeriCraft"
	gitBase = "https://github.com/TheTemportalist/" + project.gitName
	gitUrl = project.gitBase
	curseID = "245423"
}

automata {

	// ~~~ Start: Dependencies
	dependencies {
		repositories = [
				'ddd'       : 'http://doubledoordev.net:8082/artifactory/mods/',
				'dsiriusArt': 'http://box1.dmodoomsirius.me:8081/artifactory/libs-release/'
		]
		dependencies = [
				{
					group = 'temportalist.origin'
					name = 'Origin'
					version = '9.+'
					compileWith = 'deobfCompile' // compile, provided, deobfCompile, deobfProvided
					replace = { // optional
						// before, after, required-before or required-after
						instruction = 'required-after'
						modid = 'origin'
						versionRange = '[9,)'
					}
				},
				{
					group = 'mezz.jei'
					name = 'jei_1.9.4'
					version = '3.4.0.204'
					compileWith = 'deobfCompile'
				},
				{
					group = 'slimeknights.mantle'
					name = 'Mantle'
					version = '1.9.4-0.10.1.jenkins142'
					compileWith = 'deobfCompile'
				},
				{
					group = 'slimeknights'
					name = 'TConstruct'
					version = '1.9.4-2.3.1.jenkins229'
					compileWith = 'deobfCompile'
				}
		]
	}
	// ~~~~~ End: Dependencies

	// ~~~ Start: Project ID
	organization = "temportalist"
	groupName = "esotericraft"
	// ~~~~~ End: Project ID

	// ~~~ Start: Versioning
	versionMajor = 0
	versionMinor = 0
	versionPatch = 1

	if (project.hasProperty("MANUAL"))
		manualBuildNumber = MANUAL

	def branch = getBranch()
	if (project.hasProperty("build_type")) {
		if (build_type == "dev")
			autoBuildNumber = getBuildNumber()
	} else if (!branch.startsWith("master"))
		autoBuildNumber = getBuildNumber()
	// ~~~~~ End: Versioning

	// ~~~ Start: Forge Data
	versionMinecraft = "1.9.4"
	versionForge = "12.17.0.1963"
	versionMappings = "snapshot_20160518"
	// ~~~~~ End: Forge Data

	// ~~~ Start: Replacements
	replace { // MUST be defined after "Versioning" and "Forge Data"
		version = "@MOD_VERSION@"
		forge = 'required-after:Forge'
		replaceMap = [
				"required-after:esotericraft":
						"required-after:esotericraft@[" + getVersionPure() + ",)"
		]
	}
	// ~~~~~ End: Replacements

	// ~~~ Start: Resources
	resources = true
	// ~~~~~ End: Resources

	// ~~~ Start: Changelog
	changelog { // MUST be defined before it's corresponding curseProject block (if linked)
		id = curseID
		fileExtension = 'html'
		template = file('changelog.min.html').getText("UTF-8")
		fromRef = '709e925c6584f4d999cce318ea3b9104f3ab86d6'
		toRef = 'HEAD'
	}
	// ~~~~~ End: Changelog

	// ~~~ Start: CurseForge
	if (project.hasProperty("tempCurseAPI")) curseKey = tempCurseAPI
	curseProject {
		id = curseID
		releaseType = "alpha"
		// Changelog file generated and set by automata
		addGameVersion getVersionMinecraft() // Automata function
		addArtifact sourcesJar
	}
	// ~~~~~ End: CurseForge

	// ~~~ Start: Archives
	if (project.hasProperty("dddUser") && project.hasProperty("dddPass")) {
		archives {
			name = "Origin"
			description = project.gitName
			repoUrl = "http://doubledoordev.net:8082/artifactory/mods"
			repoUsername = dddUser
			repoPassword = dddPass
			sourceUrl = project.gitUrl
			scmUrl = "scm:git:git://github.com/TheTemportalist/" + project.gitName + ".git"
			issueTrackerType = "github"
			issueTrackerUrl = project.gitBase + "issues"
			licenseType = "Apache License Version 2.0"
			licenseUrl = project.gitUrl + "LICENSE"
			developers = [
					[
							"id"  : "TheTemportalist",
							"name": "The Temportalist",
							"role": "developer"
					]
			]
		}
	}
	// ~~~~~ End: Archives

}

// ~~~~~ End: Automata

apply from: 'gradle_scripts/compat/idea.gradle'
