// For those who want the bleeding edge
buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			// for cursegradle
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
		// for cursegradle
		classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.7"
	}
}

apply from: 'gradle_scripts/curse/applyMe.gradle'

apply plugin: 'scala'
apply plugin: 'net.minecraftforge.gradle.forge'

def getRepositoryMap() {
	return [
		'ddd': 'http://doubledoordev.net:8082/artifactory/mods/',
		'dsiriusArt': 'http://box1.dmodoomsirius.me:8081/artifactory/libs-release/'
	]
}

// TODO MOVE ME
repositories {
	mavenCentral()
	jcenter()
	getRepositoryMap().each { repoName, repoURL ->
		repositories.maven {
			name "${repoName}"
			url "${repoURL}"
		}
	}
}

dependencies {
	deobfCompile "temportalist.origin:Origin:${version_origin_dep}"
	deobfCompile "mezz.jei:jei_${version_minecraft}:${version_jei}"
}

group = "${org}.${groupName}"

apply from: "gradle_scripts/java/applyMe.gradle"

minecraft {
	version = "${version_minecraft}-${version_forge}${version_forge_b}"
	runDir = "run"
	mappings = "${version_mcp}"

	replace "required-after:Forge", "required-after:Forge@[${version_forge},)"
	replace "required-after:origin", "required-after:origin@[${version_origin},)"
	replace "required-after:esotericraft", "required-after:esotericraft@[${version_major}.${version_minor}.${version_patch},)"
	replace "@MOD_VERSION@", "${version_major}.${version_minor}.${version_patch}"
}

archivesBaseName = "${archiveName}-${project.minecraft.version}"
apply from: 'gradle_scripts/versions/versioning.gradle'

apply from: "gradle_scripts/jar/sourceSets.gradle"
apply from: "gradle_scripts/jar/jar.gradle"
apply from: "gradle_scripts/jar/sources.gradle"
apply from: "gradle_scripts/other/processResources.gradle"

apply plugin: 'maven'
apply plugin: 'maven-publish'

uploadArchives {
	repositories {
		// official DDD maven stuffs
		if (project.hasProperty("dddUser") && project.hasProperty("dddUrl") && project.hasProperty("dddPass")) {
			mavenDeployer {
				repository(url: dddUrl) {
					authentication(userName: dddUser, password: dddPass)
				}
				pom {
					groupId = project.group
					version = project.version
					artifactId = "${archiveName}"
					project {
						name project.archivesBaseName
						packaging 'jar'
						description '${gitConfig.gitName}'
						url 'https://github.com/TheTemportalist/${gitConfig.gitName}'

						scm {
							url 'https://github.com/TheTemportalist/${gitConfig.gitName}'
							connection 'scm:git:git://github.com/TheTemportalist/${gitConfig.gitName}.git'
							developerConnection 'scm:git:git@github.com:TheTemportalist/${gitConfig.gitName}.git'
						}

						issueManagement {
							system 'github'
							url 'https://github.com/TheTemportalist/${gitConfig.gitName}/issues'
						}

						licenses {
							license {
								name '${gitConfig.license}'
								url 'https://github.com/TheTemportalist/${gitConfig.gitName}/blob/master/LICENSE'
								distribution 'repo'
							}
						}

						developers {
							developer {
								id 'TheTemportalist'
								name 'TheTemportalist'
								roles { role 'developer' }
							}
						}
					}
				}
			}
		}
	}
}

apply from: 'gradle_scripts/compat/idea.gradle'
apply from: 'gradle_scripts/curse/impl.gradle'
